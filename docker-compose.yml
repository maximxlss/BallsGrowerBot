version: "3.7"
services:
  dickgrowerbot:
    build: .
    container_name: dickgrowerbot
    restart: unless-stopped
    environment:
      - TELOXIDE_TOKEN
      - RUST_LOG
      - WEBHOOK_URL
      - DATABASE_URL=postgres://${POSTGRES_USER:?error}:${POSTGRES_PASSWORD:?error}@${POSTGRES_HOST:?error}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:?error}
      - DATABASE_MAX_CONNECTIONS
      - HELP_ADMIN_CHANNEL_RU
      - HELP_ADMIN_CHANNEL_EN
      - HELP_ADMIN_CHAT_RU
      - HELP_ADMIN_CHAT_EN
      - HELP_GIT_REPO
      - CHATS_MERGING_ENABLED
      - TOP_UNLIMITED_ENABLED
      - MULTIPLE_LOANS_ENABLED
      - PVP_DEFAULT_BET
      - PVP_CHECK_ACCEPTOR_LENGTH
      - PVP_CALLBACK_LOCKS_ENABLED
      - PVP_STATS_SHOW
      - PVP_STATS_SHOW_NOTICE
      - GROWTH_MIN
      - GROWTH_MAX
      - GROW_SHRINK_RATIO
      - GROWTH_DOD_BONUS_MAX
      - NEWCOMERS_GRACE_DAYS
      - TOP_LIMIT
      - HELP_PUSSIES_COEF
      - LOAN_PAYOUT_COEF
      - DOD_SELECTION_MODE
      - DOD_RICH_EXCLUSION_RATIO
      - ANNOUNCEMENT_MAX_SHOWS
      - ANNOUNCEMENT_EN
      - ANNOUNCEMENT_RU
    expose:
      - 8080
    networks:
      - postgres-network
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      driver: local
    depends_on:
      - postgres
  postgres:
    image: postgres:14.5-alpine
    container_name: dickgrowerbot-postgresql
    environment:
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA=/var/lib/postgresql/data/pgdata
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postgres-network
    logging:
      driver: local
networks:
  postgres-network:
    driver: bridge